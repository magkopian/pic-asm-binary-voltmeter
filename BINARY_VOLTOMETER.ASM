;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Copyright (c) 2013 Manolis Agkopian				;
;See the file LICENCE for copying permission.		;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;; ANALOG READ ;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	PROCESSOR 16F876A
	INCLUDE <P16F876A.INC>

	__CONFIG _XT_OSC & _WDT_OFF & _PWRTE_OFF & _CP_OFF & _LVP_OFF & _BODEN_OFF

ANVAL	EQU	0x20 ;ANALOG VALUE OF AN0 INPUT
CNT0	EQU	0x21 ;COUNTER IN BANK 00
CNT1	EQU	0xA1 ;COUNTER IN BANK 01

	ORG	0 ;WE MAKE USE OF INTERUPTS
INIT:
	BSF STATUS, 5 ;SELECT BANK 01

	;PORTA IS SET TO INPUT MODE
	MOVLW B'11111111'
	MOVWF TRISA

	;PORTB IS SET TO OUTPUT MODE
	MOVLW B'00000000'
	MOVWF TRISB

	BCF STATUS, 5 ;SELECT BANK 00

MAIN:
	CALL ADC_INIT ;INIT ADC MODULE
	CALL ADC_READ ;READ ANALOG VALUE AND STORE TO ANVAL REGISTER

	;OUTPUT ANVAL TO PORTB
	MOVF ANVAL, W
	MOVWF PORTB

	GOTO MAIN


;;;;ADC INIT PROC;;;;
ADC_INIT:
	BSF STATUS, 5 ;SELECT BANK 01

	;RIGHT JUSTIFIED RESULT, +VREF=VDD, -VREF=VSS, AN0-AN7=ANALOG
	MOVLW B'10000000'
	MOVWF ADCON1

	BCF STATUS, 5 ;SELECT BANK 00

	;FOSC/8, ADON=1
	MOVLW B'01000001' ;FOR ABOUT 3-5MHZ CRYSTAL
	MOVWF ADCON0

	RETURN

;;;;ADC READ PROC;;;;
ADC_READ:
	BCF STATUS, 5 ;SELECT BANK 00

	BSF ADCON0, 2 ;START CONVERTION PROCESS (WE SET THE GO BIT)
WAIT:
	BTFSC ADCON0, 2
	GOTO WAIT ;WAIT FOR CONVERTION TO FINISH (WAIT FOR GO BIT TO CLEAR)

	;;;WE SAVE RESULT INTO AN 8BIT REGISTER TO USE FOR OUTPUT (WE DROP THE TWO LESS SIGNIFICANT BITS);;;

	;FIRST WE PROCESS THE HIGH BYTE OF RESULT
	MOVLW 0x06
	MOVWF CNT0
AGAIN_0:
	BCF STATUS, C ;WE WANT SHIFT (NOT ROTATE), SO WE CLEAR CARRY
	RLF ADRESH, 1 ;SHIFT LEFT 6 BITS A/D RESULT HIGH BYTE
	DECFSZ CNT0
	GOTO AGAIN_0

	MOVF ADRESH, W ;MOVE ADRESH TO W
	MOVWF ANVAL ;MOVE W TO ANVAL


	;NOW WE PROCESS THE LOW BYTE OF RESULT
	BSF STATUS, 5 ;SELECT BANK 01
	MOVLW 0x02
	MOVWF CNT1
AGAIN_1:
	BCF STATUS, C ;WE WANT SHIFT (NOT ROTATE), SO WE CLEAR CARRY
	RRF ADRESL, 1 ;SHIFT RIGHT 2 BITS A/D RESULT LOW BYTE
	DECFSZ CNT1
	GOTO AGAIN_1

	MOVF ADRESL, W ;MOVE ADRESL TO W
	BCF STATUS, 5 ;SELECT BANK 00
	ADDWF ANVAL, 1 ;ADD W TO ANVAL

	RETURN

	END